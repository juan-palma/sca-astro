#name: Deploy Astro to AWS

#on:
#  push:
#    branches: [ main ]

#permissions:
#  id-token: write   # OIDC
#  contents: read

#jobs:
#  build-deploy:
#    runs-on: ubuntu-latest

#    steps:
#    - name: Checkout
#      uses: actions/checkout@v4

#    - name: Setup Node
#      uses: actions/setup-node@v4
#      with:
#        node-version: 20

#    - name: Install deps & build
#      run: |
#        npm ci
#        npm run build

#    - name: Configure AWS creds (OIDC)
#      uses: aws-actions/configure-aws-credentials@v4
#      with:
#        role-to-assume: arn:aws:iam::437151405691:role/deploy-github
#        aws-region: us-east-1   # basta con una; S3/CF son globales

#    - name: Sync to S3
#      run: |
#        aws s3 sync dist/ s3://astro-site-juan-2025/ --delete

#    - name: Invalidate CloudFront
#      run: |
#        aws cloudfront create-invalidation \
#          --distribution-id E338RE4NT2C66B \
#          --paths "/_astro/*" "/index.html" "/en-construccion/" "/img" "/js" "/politicas-privacidad" "/sitemap-0.xml" "/sitemap-index.xml"



#name: Test OIDC Connection
#on: [workflow_dispatch]

#permissions:
#  id-token: write
#  contents: read

#jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
      
#      - name: Configure AWS
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: arn:aws:iam::437151405691:role/deploy-github
#          aws-region: us-east-1
          
#      - name: Verify
#        run: aws sts get-caller-identity

name: Debug OIDC Token
on: [push]

permissions:
  id-token: write  # Necesario para obtener el token OIDC
  contents: read   # Necesario para clonar el repo

jobs:
  debug-token:
    runs-on: ubuntu-latest
    steps:
      - name: Get OIDC token
        id: oidc
        run: |
          # Obtiene el token y lo guarda en un archivo
          curl -sLS "${ACTIONS_ID_TOKEN_REQUEST_URL}?audience=sts.amazonaws.com" \
            -H "User-Agent: actions/oidc-client" \
            -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}" \
            -o token_response.json

          # Extrae el token del JSON
          OIDC_TOKEN=$(jq -r '.value' token_response.json)
          echo "Token length: ${#OIDC_TOKEN} characters"  # Muestra longitud sin revelar contenido

          # Guarda el token en una variable de salida (opcional)
          echo "OIDC_TOKEN=${OIDC_TOKEN}" >> $GITHUB_OUTPUT

          # Opcional: Muestra un hash del token para verificar cambios entre ejecuciones
          echo "Token SHA-256 hash: $(echo -n "$OIDC_TOKEN" | sha256sum | cut -d' ' -f1)"
      - name: Upload token as artifact
        uses: actions/upload-artifact@v3
        with:
          name: oidc-token
          path: token_response.json